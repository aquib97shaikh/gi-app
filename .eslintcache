[{"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\index.js":"1","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\reportWebVitals.js":"2","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\App.js":"3","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\Login.js":"4","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\firebase.js":"5","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\OTP.js":"6","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\SuccessPage.js":"7","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\AuthPage.js":"8","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\Tab.js":"9","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\SignUp.js":"10","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\SIgnUp.js":"11"},{"size":548,"mtime":1611730063108,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":389,"mtime":1611953776191,"results":"15","hashOfConfig":"13"},{"size":4852,"mtime":1611953253889,"results":"16","hashOfConfig":"13"},{"size":527,"mtime":1611734542017,"results":"17","hashOfConfig":"13"},{"size":2714,"mtime":1611776542247,"results":"18","hashOfConfig":"13"},{"size":252,"mtime":1611933213303,"results":"19","hashOfConfig":"13"},{"size":594,"mtime":1611776038759,"results":"20","hashOfConfig":"13"},{"size":420,"mtime":1611776711524,"results":"21","hashOfConfig":"13"},{"size":0,"mtime":1611749581111,"results":"22","hashOfConfig":"13"},{"size":6921,"mtime":1611953241290,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"fth00g",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\index.js",[],["48","49"],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\reportWebVitals.js",[],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\App.js",[],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\Login.js",["50"],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\firebase.js",[],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\OTP.js",["51","52"],"import React,{useState,useRef,useEffect,createRef} from 'react'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport  Button  from 'react-bootstrap/Button';\r\nfunction OTP(props) {\r\n    const [otp, setOtp] = useState({1:\"\",2:\"\",3:\"\",4:\"\",5:\"\",6:\"\"});\r\n    const [refFocus, setRefFocus] = useState([]);\r\n    useEffect(() => {\r\n        setRefFocus(elRefs => (\r\n          Array(6).fill().map((_, i) => elRefs[i] || createRef())\r\n        ));\r\n      }, []);\r\n    const onChangeHandler = (event) =>{\r\n      console.log(event);\r\n        let tempOtp = otp;\r\n        \r\n        const num = Number(event.target.name);\r\n        if(event.keyCode===8){\r\n          tempOtp[num] = \"\";\r\n          setOtp({...tempOtp});\r\n          if(num>1){\r\n            // console.log(num,refFocus[num]);\r\n            // console.log(refFocus);\r\n            refFocus[num-2].current && refFocus[num-2].current.focus();\r\n          }\r\n\r\n        }else{\r\n          const o = event.key;\r\n        // console.log(event);\r\n        if(Number.isNaN(Number(o))){\r\n          return;\r\n        }\r\n        console.log({o});\r\n        tempOtp[num] = o;\r\n        \r\n       \r\n        if(num<6){\r\n\r\n          refFocus[num].current && refFocus[num].current.focus();\r\n        }\r\n\r\n        }\r\n        \r\n        props.onChangeOtp(otp)\r\n    }\r\n    useEffect(()=>{\r\n      refFocus[0] && refFocus[0].current && refFocus[0].current.focus();\r\n    },[refFocus])\r\n    \r\n    return (\r\n        <div>\r\n            <Row className=\"justify-content-center\">\r\n            <Col xs={12} md={6} lg={5}>\r\n              <h2 className=\"mb-3\">Enter OTP</h2>\r\n              <Form className=\"form\" onSubmit={props.onSubmitOtp}>\r\n              <Form.Group id=\"formgroup\" >\r\n                  {[...refFocus.keys()].map((i,idx)=>{\r\n                      return (\r\n                        <Form.Control key={idx}\r\n                        className=\"otp\"\r\n                          id={`otp${idx+1}`}\r\n                          type=\"number\"\r\n                          value={otp[idx+1]}\r\n                          ref ={refFocus[i]}\r\n                          name={idx+1}\r\n                          placeholder={\"  OTP\".charAt(idx)}\r\n                          onKeyDown={onChangeHandler}\r\n                        />\r\n                       \r\n                      )\r\n                  })}\r\n                   </Form.Group>\r\n                \r\n                <Button variant=\"primary\" button=\"Submit\" type=\"submit\" onClick={props.onSubmitOtp}> Continue </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OTP\r\n","C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\SuccessPage.js",[],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\AuthPage.js",[],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\Tab.js",[],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\SignUp.js",[],"C:\\Users\\Aaquib\\Desktop\\NewtonSchool\\Interviews\\GrowIndigo\\gi-app\\src\\SIgnUp.js",["53","54"],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":33},{"ruleId":"59","severity":1,"message":"60","line":1,"column":24,"nodeType":"61","messageId":"62","endLine":1,"endColumn":30},{"ruleId":"59","severity":1,"message":"63","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":17},{"ruleId":"59","severity":1,"message":"60","line":1,"column":27,"nodeType":"61","messageId":"62","endLine":1,"endColumn":33},{"ruleId":"59","severity":1,"message":"64","line":35,"column":13,"nodeType":"61","messageId":"62","endLine":35,"endColumn":17},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]