{"version":3,"sources":["SuccessPage.js","OTP.js","firebase.js","Login.js","Tab.js","SIgnUp.js","AuthPage.js","App.js","reportWebVitals.js","index.js"],"names":["SuccessPage","className","OTP","props","useState","1","2","3","4","5","6","otp","setOtp","refFocus","setRefFocus","useEffect","elRefs","Array","fill","map","_","i","createRef","onChangeHandler","event","console","log","tempOtp","num","Number","target","name","keyCode","current","focus","o","key","isNaN","onChangeOtp","Row","Col","xs","md","lg","Form","onSubmit","onSubmitOtp","Group","id","keys","idx","Control","type","value","ref","placeholder","charAt","onKeyDown","Button","variant","button","onClick","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Login","mobile","state","setState","mobileVerifed","optConfirmed","showOtp","show","setShow","setUpRecaptcha","window","recaptchaVerifier","auth","RecaptchaVerifier","size","callback","response","onSignInSubmit","defaultCountry","e","preventDefault","phoneNumber","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","error","Container","fluid","InputGroup","Prepend","Text","disabled","onChange","match","required","otpInput","Object","values","join","optConfirm","confirm","result","user","fetch","method","body","JSON","stringify","headers","r","json","success","loggedIn","er","alert","Tab","active","setActive","options","tabHandler","SignUp","email","otpConfirmed","autoComplete","AuthPage","loginShow","setLoginShow","a","App","setLoggedIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a2d410f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction SuccessPage() {\r\n    return (\r\n      <div className=\"success\">\r\n        \r\n                <p >\r\n                Success\r\n                </p>\r\n              \r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SuccessPage\r\n","import React,{useState,useRef,useEffect,createRef} from 'react'\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport  Button  from 'react-bootstrap/Button';\r\nfunction OTP(props) {\r\n    const [otp, setOtp] = useState({1:\"\",2:\"\",3:\"\",4:\"\",5:\"\",6:\"\"});\r\n    const [refFocus, setRefFocus] = useState([]);\r\n    useEffect(() => {\r\n        setRefFocus(elRefs => (\r\n          Array(6).fill().map((_, i) => elRefs[i] || createRef())\r\n        ));\r\n      }, []);\r\n    const onChangeHandler = (event) =>{\r\n      console.log(event);\r\n        let tempOtp = otp;\r\n        \r\n        const num = Number(event.target.name);\r\n        if(event.keyCode===8){\r\n          tempOtp[num] = \"\";\r\n          setOtp({...tempOtp});\r\n          if(num>1){\r\n            // console.log(num,refFocus[num]);\r\n            // console.log(refFocus);\r\n            refFocus[num-2].current && refFocus[num-2].current.focus();\r\n          }\r\n\r\n        }else{\r\n          const o = event.key;\r\n        // console.log(event);\r\n        if(Number.isNaN(Number(o))){\r\n          return;\r\n        }\r\n        console.log({o});\r\n        tempOtp[num] = o;\r\n        \r\n       \r\n        if(num<6){\r\n\r\n          refFocus[num].current && refFocus[num].current.focus();\r\n        }\r\n\r\n        }\r\n        \r\n        props.onChangeOtp(otp)\r\n    }\r\n    useEffect(()=>{\r\n      refFocus[0] && refFocus[0].current && refFocus[0].current.focus();\r\n    },[refFocus])\r\n    \r\n    return (\r\n        <div>\r\n            <Row className=\"justify-content-center\">\r\n            <Col xs={12} md={6} lg={5}>\r\n              <h2 className=\"mb-3\">Enter OTP</h2>\r\n              <Form className=\"form\" onSubmit={props.onSubmitOtp}>\r\n              <Form.Group id=\"formgroup\" >\r\n                  {[...refFocus.keys()].map((i,idx)=>{\r\n                      return (\r\n                        <Form.Control key={idx}\r\n                        className=\"otp\"\r\n                          id={`otp${idx+1}`}\r\n                          type=\"number\"\r\n                          value={otp[idx+1]}\r\n                          ref ={refFocus[i]}\r\n                          name={idx+1}\r\n                          placeholder={\"  OTP\".charAt(idx)}\r\n                          onKeyDown={onChangeHandler}\r\n                        />\r\n                       \r\n                      )\r\n                  })}\r\n                   </Form.Group>\r\n                \r\n                <Button variant=\"primary\" button=\"Submit\" type=\"submit\" onClick={props.onSubmitOtp}> Continue </Button>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OTP\r\n","import firebase from \"firebase/app\";\r\n\r\n// Add the Firebase services that you want to use\r\nimport \"firebase/auth\";\r\nexport var firebaseConfig = {\r\n    apiKey: \"AIzaSyBVb9C3qsRGWRcz-AJ0veusZGjuK2JMu5A\",\r\n    authDomain: \"gi-app-e2bb2.firebaseapp.com\",\r\n    projectId: \"gi-app-e2bb2\",\r\n    storageBucket: \"gi-app-e2bb2.appspot.com\",\r\n    messagingSenderId: \"1093133212166\",\r\n    appId: \"1:1093133212166:web:98bdcc5310e208d4530187\"\r\n  };\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport OTP from \"./OTP\";\r\nimport { InputGroup } from \"react-bootstrap\";\r\n\r\nimport firebase from \"./firebase\";\r\n\r\nfunction Login(props) {\r\n  const [state, setState] = useState({ mobile: \"\", otp: {} });\r\n  const [show, setShow] = useState({\r\n    mobileVerifed: false,\r\n    optConfirmed: false,\r\n    showOtp: false,\r\n  });\r\n\r\n  const onChangeOtp = (otp) => {\r\n    setState({ ...state, otp });\r\n  };\r\n  const login = (e) => {\r\n    // e.preventDefault();\r\n    \r\n    fetch(\"https://rocky-beyond-21056.herokuapp.com/login\", {\r\n      \r\n      method: \"POST\",\r\n      body: JSON.stringify({ mobile: state.mobile }),\r\n      headers:{\r\n        \"content-type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\" :\"*\"\r\n      }\r\n      \r\n    })\r\n      .then((r) => r.json())\r\n      .then((r) => {\r\n        if(r.success){\r\n          props.loggedIn(true);\r\n        }\r\n        \r\n      })\r\n      .catch((er) => {\r\n        console.log(er);\r\n      });\r\n  };\r\n  const onSubmitOtp = (e) => {\r\n    e.preventDefault();\r\n    let otpInput = Object.values(state.otp).join(\"\");\r\n    let optConfirm = window.confirmationResult;\r\n    console.log(otpInput);\r\n    optConfirm\r\n      .confirm(otpInput)\r\n      .then(function (result) {\r\n        let user = result.user;\r\n        console.log(\"confirmed otp\", { user });\r\n        login();\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        alert(\"Incorrect OTP\");\r\n      });\r\n  };\r\n  const setUpRecaptcha = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: function (response) {\r\n          console.log(\"Captcha Resolved\");\r\n          onSignInSubmit();\r\n        },\r\n        defaultCountry: \"IN\",\r\n      }\r\n    );\r\n  };\r\n  const onSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    setUpRecaptcha();\r\n    let phoneNumber = \"+91\" + state.mobile;\r\n    console.log(phoneNumber);\r\n    let appVerifier = window.recaptchaVerifier;\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n      .then(function (confirmationResult) {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        window.confirmationResult = confirmationResult;\r\n        // console.log(confirmationResult);\r\n        console.log(\"OTP is sent\");\r\n        setShow({ ...show, showOtp: true });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setShow({ ...show, showOtp: false });\r\n      });\r\n  };\r\n\r\n \r\n  const verifyMobile = (mobile) => {\r\n    console.log(mobile+\"  dmob\");\r\n    var phoneno = /^\\d{10}$/;\r\n    if (mobile.match(phoneno)) {\r\n      setShow({ ...show, mobileVerifed: true });\r\n    }\r\n    else{\r\n        setShow({ ...show, mobileVerifed: false });\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container fluid=\"sm\" className=\"mt-3\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={12} md={6} lg={5}>\r\n            <h2 className=\"mb-3\">Login</h2>\r\n            <Form className=\"form\" onSubmit={onSignInSubmit}>\r\n              <div id=\"recaptcha-container\"></div>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroup-sizing-sm\">\r\n                    +91\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"mobile\"\r\n                //   autoComplete=\"@name\"\r\n                  value={state[\"mobile\"]}\r\n                  disabled={show.showOtp}\r\n                  placeholder=\"Mobile Number\"\r\n                  onChange={(event) => {\r\n                    setState({\r\n                      ...state,\r\n                      [event.target.name]: event.target.value,\r\n                    });\r\n                    verifyMobile(event.target.value);\r\n                  }}\r\n                  required\r\n                />\r\n              </InputGroup>\r\n              <Button\r\n                variant=\"primary\"\r\n                button=\"Submit\"\r\n                disabled={!show.mobileVerifed}\r\n                \r\n                type=\"submit\"\r\n              >\r\n                {\" \"}\r\n                Send Otp{\" \"}\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        {show.showOtp && (\r\n          <>\r\n            <OTP onChangeOtp={onChangeOtp} onSubmitOtp={onSubmitOtp} />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react'\r\nimport \"./Tab.css\"\r\nfunction Tab(props) {\r\n    const [active, setActive] = useState(0)\r\n    return (\r\n      <div className=\"tab-container\">\r\n        {props.options.map((i,idx) => (\r\n          <span className={active===idx ? \"tab active\" :\"tab\"} key={idx} onClick={()=>{setActive(idx);props.tabHandler(idx);}}>{i}</span>\r\n        ))}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Tab","import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Button, InputGroup } from \"react-bootstrap\";\r\nimport OTP from \"./OTP\";\r\nimport \"./Auth.css\";\r\nimport firebase from \"./firebase\";\r\n\r\nfunction SignUp(props) {\r\n  const [state, setState] = useState({\r\n    mobile: \"\",\r\n    otp: {},\r\n    name: \"\",\r\n    email: \"\",\r\n  });\r\n  const [show, setShow] = useState({\r\n    mobileVerifed: false,\r\n    optConfirmed: false,\r\n    showOtp: false,\r\n  });\r\n\r\n  const onChangeOtp = (otp) => {\r\n    setState({ ...state, otp });\r\n  };\r\n  const onSubmitOtp = (e) => {\r\n    e.preventDefault();\r\n    let otpInput = Object.values(state.otp).join(\"\");\r\n    let optConfirm = window.confirmationResult;\r\n    console.log(otpInput);\r\n    optConfirm\r\n      .confirm(otpInput)\r\n      .then(function (result) {\r\n        let user = result.user;\r\n        setShow({ ...show, otpConfirmed: true });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        alert(\"Incorrect OTP\");\r\n        setShow({ ...show, otpConfirmed: false });\r\n      });\r\n  };\r\n  const signup = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"https://rocky-beyond-21056.herokuapp.com/signup\",{\r\n        method:\"POST\",\r\n        body:JSON.stringify(state),\r\n        headers:{\r\n            \"content-type\":\"application/json\",\r\n        }\r\n\r\n    }).then(r=>r.json()).then(r=>{\r\n        if(r.success){\r\n          props.loggedIn(true);\r\n        }else{\r\n            console.log(r);\r\n        }\r\n    }).catch(er=>{\r\n        console.log(er);\r\n    })\r\n  };\r\n  const setUpRecaptcha = () => {\r\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier(\r\n      \"recaptcha-container\",\r\n      {\r\n        size: \"invisible\",\r\n        callback: function (response) {\r\n          console.log(\"Captcha Resolved\");\r\n          onSignInSubmit();\r\n        },\r\n        defaultCountry: \"IN\",\r\n      }\r\n    );\r\n  };\r\n  const onSignInSubmit = (e) => {\r\n    e.preventDefault();\r\n    setUpRecaptcha();\r\n    let phoneNumber = \"+91\" + state.mobile;\r\n    console.log(phoneNumber);\r\n    let appVerifier = window.recaptchaVerifier;\r\n    firebase\r\n      .auth()\r\n      .signInWithPhoneNumber(phoneNumber, appVerifier)\r\n      .then(function (confirmationResult) {\r\n        // SMS sent. Prompt user to type the code from the message, then sign the\r\n        // user in with confirmationResult.confirm(code).\r\n        window.confirmationResult = confirmationResult;\r\n        // console.log(confirmationResult);\r\n        console.log(\"OTP is sent\");\r\n        setShow({ ...show, showOtp: true });\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n        setShow({ ...show, showOtp: false });\r\n      });\r\n  };\r\n\r\n  const verifyMobile = (mobile) => {\r\n    var phoneno = /^\\d{10}$/;\r\n    if (mobile.match(phoneno)) {\r\n      setShow({ ...show, mobileVerifed: true });\r\n    }\r\n    else{\r\n        setShow({ ...show, mobileVerifed: false });\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container fluid=\"sm\" className=\"mt-3\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col xs={12} md={6} lg={5}>\r\n            <h2 className=\"mb-3\">SignUp</h2>\r\n            <Form className=\"form\" onSubmit={onSignInSubmit}>\r\n              <div id=\"recaptcha-container\"></div>\r\n\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroup-sizing-sm\">\r\n                    +91\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"mobile\"\r\n                //   autoComplete=\"@name\"\r\n                  value={state[\"mobile\"]}\r\n                  disabled={show.showOtp}\r\n                  placeholder=\"Mobile Number\"\r\n                  onChange={(event) => {\r\n                    setState({\r\n                      ...state,\r\n                      [event.target.name]: event.target.value,\r\n                    });\r\n                    verifyMobile(event.target.value);\r\n                  }}\r\n                  required\r\n                />\r\n              </InputGroup>\r\n              <Button\r\n                variant=\"primary\"\r\n                button=\"Submit\"\r\n                disabled={!show.mobileVerifed}\r\n                type=\"submit\"\r\n              >\r\n                Send Otp\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        {show.showOtp && (\r\n          <>\r\n            <OTP onChangeOtp={onChangeOtp} onSubmitOtp={onSubmitOtp} />\r\n            {show.otpConfirmed && (\r\n              <Row className=\"justify-content-center\">\r\n              <Col xs={12} md={6} lg={5}>\r\n\r\n                <Form className=\"form2\" onSubmit={signup}>\r\n                <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroup-sizing-sm\">\r\n                    Name\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                   type=\"text\"\r\n                   name=\"name\"\r\n                   autoComplete=\"@name\"\r\n                   value={state.name}\r\n                   placeholder=\"Your Name\"\r\n                   onChange={(event) => {\r\n                     setState({\r\n                       ...state,\r\n                       [event.target.name]: event.target.value,\r\n                     });\r\n                   }}\r\n                   required\r\n                />\r\n              </InputGroup>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroup-sizing-sm\">\r\n                  email@\r\n                  </InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                      type=\"email\"\r\n                      name=\"email\"\r\n                      autoComplete=\"@email\"\r\n                      value={state.email}\r\n                      placeholder=\"Mobile Number\"\r\n                      onChange={(event) => {\r\n                        setState({\r\n                          ...state,\r\n                          [event.target.name]: event.target.value,\r\n                        });\r\n                      }}\r\n                      required\r\n                    />\r\n              </InputGroup>\r\n                \r\n                \r\n                  <Button\r\n                    variant=\"primary\"\r\n                    button=\"Submit\"\r\n                    disabled={!show.mobileVerifed}\r\n                    type=\"submit\"\r\n                    \r\n                  >\r\n                    Signup\r\n                  </Button>\r\n                </Form>\r\n                </Col>\r\n              </Row>\r\n            )}\r\n          </>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React,{useState} from 'react';\r\nimport Login from './Login';\r\nimport Tab from './Tab';\r\nimport SignUp from './SIgnUp';\r\n\r\nfunction AuthPage(props) {\r\n    const [loginShow, setLoginShow] = useState(true);\r\n    const tabHandler = (a)=>{\r\n        console.log({a});\r\n        a===0 ? setLoginShow(true) : setLoginShow(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Tab options={[\"Login\",\"Signup\"]} tabHandler={tabHandler}/>\r\n            {loginShow ? <Login loggedIn={props.loggedIn} /> : <SignUp loggedIn={props.loggedIn}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthPage\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport SuccessPage from './SuccessPage';\nimport React,{useState} from 'react';\nimport AuthPage from './AuthPage';\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false)\n  \n  return (\n    <div className=\"App\">\n      {loggedIn ? <SuccessPage /> :   <AuthPage loggedIn={setLoggedIn}/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}